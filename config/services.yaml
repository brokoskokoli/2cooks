# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'de'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: de|en|fr
    app.notifications.email_sender: noreply@recipes.stefanrichter.de

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        # defines the scalar arguments once and apply them to any service defined/created in this file
        bind:
            $locales: '%app_locales%'
            $defaultLocale: '%locale%'
            $emailSender: '%app.notifications.email_sender%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Entity,Migrations,Tests}'

    # when the service definition only contains arguments, you can omit the
    # 'arguments' key and define the arguments just below the service class
    App\EventSubscriber\CommentNotificationSubscriber:
        $sender: '%app.notifications.email_sender%'

    App\Service\TranslationService:
        arguments: ['@Doctrine\ORM\EntityManagerInterface',"%kernel.cache_dir%"]

    App\Service\PDFExportService:
        arguments: ['@swiftmailer.mailer','@Twig\Environment','@Symfony\Component\Translation\TranslatorInterface',"%kernel.root_dir%"]

    app.translations:
        alias: App\Service\TranslationService

    app.ingredients:
        alias: App\Service\IngredientService

    app.ref_units:
        alias: App\Service\RefUnitService


    translation.loader.db:
        class: App\Service\DatabaseTranslationLoaderService
        arguments: ["@app.ingredients", "@app.ref_units"]
        tags:
            - { name: translation.loader, alias: db}

    translation.dumper.db:
        class: App\Service\DatabaseTranslationDumperService
        arguments: ["@app.ingredients", "@app.ref_units"]
        tags:
            - { name: translation.dumper, alias: db}
